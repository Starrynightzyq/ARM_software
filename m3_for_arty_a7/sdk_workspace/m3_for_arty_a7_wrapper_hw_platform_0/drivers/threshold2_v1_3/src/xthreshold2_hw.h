// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXILiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of h
//        bit 7~0 - h[7:0] (Read)
//        others  - reserved
// 0x14 : Control signal of h
//        bit 0  - h_ap_vld (Read/COR)
//        others - reserved
// 0x18 : Data signal of s
//        bit 7~0 - s[7:0] (Read)
//        others  - reserved
// 0x1c : Control signal of s
//        bit 0  - s_ap_vld (Read/COR)
//        others - reserved
// 0x20 : Data signal of v
//        bit 7~0 - v[7:0] (Read)
//        others  - reserved
// 0x24 : Control signal of v
//        bit 0  - v_ap_vld (Read/COR)
//        others - reserved
// 0x28 : Data signal of rows
//        bit 15~0 - rows[15:0] (Read/Write)
//        others   - reserved
// 0x2c : reserved
// 0x30 : Data signal of cols
//        bit 15~0 - cols[15:0] (Read/Write)
//        others   - reserved
// 0x34 : reserved
// 0x38 : Data signal of max_h
//        bit 7~0 - max_h[7:0] (Read/Write)
//        others  - reserved
// 0x3c : reserved
// 0x40 : Data signal of min_h
//        bit 7~0 - min_h[7:0] (Read/Write)
//        others  - reserved
// 0x44 : reserved
// 0x48 : Data signal of max_s
//        bit 7~0 - max_s[7:0] (Read/Write)
//        others  - reserved
// 0x4c : reserved
// 0x50 : Data signal of min_s
//        bit 7~0 - min_s[7:0] (Read/Write)
//        others  - reserved
// 0x54 : reserved
// 0x58 : Data signal of max_v
//        bit 7~0 - max_v[7:0] (Read/Write)
//        others  - reserved
// 0x5c : reserved
// 0x60 : Data signal of min_v
//        bit 7~0 - min_v[7:0] (Read/Write)
//        others  - reserved
// 0x64 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XTHRESHOLD2_AXILITES_ADDR_AP_CTRL    0x00
#define XTHRESHOLD2_AXILITES_ADDR_GIE        0x04
#define XTHRESHOLD2_AXILITES_ADDR_IER        0x08
#define XTHRESHOLD2_AXILITES_ADDR_ISR        0x0c
#define XTHRESHOLD2_AXILITES_ADDR_H_DATA     0x10
#define XTHRESHOLD2_AXILITES_BITS_H_DATA     8
#define XTHRESHOLD2_AXILITES_ADDR_H_CTRL     0x14
#define XTHRESHOLD2_AXILITES_ADDR_S_DATA     0x18
#define XTHRESHOLD2_AXILITES_BITS_S_DATA     8
#define XTHRESHOLD2_AXILITES_ADDR_S_CTRL     0x1c
#define XTHRESHOLD2_AXILITES_ADDR_V_DATA     0x20
#define XTHRESHOLD2_AXILITES_BITS_V_DATA     8
#define XTHRESHOLD2_AXILITES_ADDR_V_CTRL     0x24
#define XTHRESHOLD2_AXILITES_ADDR_ROWS_DATA  0x28
#define XTHRESHOLD2_AXILITES_BITS_ROWS_DATA  16
#define XTHRESHOLD2_AXILITES_ADDR_COLS_DATA  0x30
#define XTHRESHOLD2_AXILITES_BITS_COLS_DATA  16
#define XTHRESHOLD2_AXILITES_ADDR_MAX_H_DATA 0x38
#define XTHRESHOLD2_AXILITES_BITS_MAX_H_DATA 8
#define XTHRESHOLD2_AXILITES_ADDR_MIN_H_DATA 0x40
#define XTHRESHOLD2_AXILITES_BITS_MIN_H_DATA 8
#define XTHRESHOLD2_AXILITES_ADDR_MAX_S_DATA 0x48
#define XTHRESHOLD2_AXILITES_BITS_MAX_S_DATA 8
#define XTHRESHOLD2_AXILITES_ADDR_MIN_S_DATA 0x50
#define XTHRESHOLD2_AXILITES_BITS_MIN_S_DATA 8
#define XTHRESHOLD2_AXILITES_ADDR_MAX_V_DATA 0x58
#define XTHRESHOLD2_AXILITES_BITS_MAX_V_DATA 8
#define XTHRESHOLD2_AXILITES_ADDR_MIN_V_DATA 0x60
#define XTHRESHOLD2_AXILITES_BITS_MIN_V_DATA 8

